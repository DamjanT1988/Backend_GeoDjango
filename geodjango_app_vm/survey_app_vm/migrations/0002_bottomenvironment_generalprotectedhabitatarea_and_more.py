# Generated by Django 5.0 on 2024-02-26 15:37

import django.contrib.gis.db.models.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("survey_app_vm", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="BottomEnvironment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("species_values", models.TextField(verbose_name="Artvärden")),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        upload_to="bottom_environments/",
                        verbose_name="Bild",
                    ),
                ),
                (
                    "file_name",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Filnamn"
                    ),
                ),
                (
                    "file_reference",
                    models.TextField(blank=True, verbose_name="Filreferens"),
                ),
                (
                    "identity",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Identitet"
                    ),
                ),
                ("link", models.URLField(blank=True, verbose_name="Länk")),
                (
                    "namespace",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Namnrymd"
                    ),
                ),
                ("habitat_values", models.TextField(verbose_name="Biotopvärden")),
                (
                    "object_boundary_date",
                    models.DateTimeField(verbose_name="Datum för objektavgränsning"),
                ),
                (
                    "continues_outside_survey_area",
                    models.CharField(
                        blank=True,
                        choices=[("JA", "Ja"), ("NEJ", "Nej")],
                        max_length=3,
                        verbose_name="Fortsätter utanför inventeringsområde",
                    ),
                ),
                (
                    "preliminary_boundary_explanation",
                    models.TextField(
                        blank=True,
                        verbose_name="Förklaring till preliminär avgränsning",
                    ),
                ),
                (
                    "preliminary_value_class_explanation",
                    models.TextField(
                        verbose_name="Förklaring till preliminär värdeklass"
                    ),
                ),
                (
                    "hydromorphological_type",
                    models.CharField(
                        max_length=255, verbose_name="Hydromorfologisk typ"
                    ),
                ),
                (
                    "hydromorphological_type_code",
                    models.CharField(
                        max_length=255, verbose_name="Hydromorfologisk typkod"
                    ),
                ),
                (
                    "invasive_alien_species",
                    models.TextField(
                        blank=True, verbose_name="Invasiva främmande arter"
                    ),
                ),
                (
                    "supplementary_biotope_type",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        verbose_name="Kompletterande biotoptyp",
                    ),
                ),
                (
                    "supplementary_biotope_type_code",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        verbose_name="Kompletterande biotoptypskod",
                    ),
                ),
                (
                    "nature_type",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Naturtyp"
                    ),
                ),
                (
                    "conservation_value_class",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Naturvärdesklass"
                    ),
                ),
                (
                    "object_description",
                    models.TextField(blank=True, verbose_name="Objektbeskrivning"),
                ),
                (
                    "object_name",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Objektnamn"
                    ),
                ),
                (
                    "object_number",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Objektnummer"
                    ),
                ),
                ("object_version", models.IntegerField(verbose_name="Objektversion")),
                (
                    "preliminary_boundary",
                    models.CharField(
                        blank=True,
                        choices=[("JA", "Ja"), ("NEJ", "Nej")],
                        max_length=3,
                        verbose_name="Preliminär avgränsning",
                    ),
                ),
                (
                    "preliminary_value_class",
                    models.CharField(
                        choices=[("JA", "Ja"), ("NEJ", "Nej")],
                        max_length=3,
                        verbose_name="Preliminär värdeklass",
                    ),
                ),
                ("references", models.TextField(blank=True, verbose_name="Referenser")),
                ("performer", models.TextField(verbose_name="Utförare")),
                (
                    "valid_from",
                    models.DateTimeField(verbose_name="Version giltig från"),
                ),
                (
                    "valid_to",
                    models.DateTimeField(blank=True, null=True, verbose_name="Till"),
                ),
                (
                    "known_species",
                    models.TextField(blank=True, verbose_name="Kända sedan tidigare"),
                ),
                ("observed_species", models.TextField(verbose_name="Observerade")),
                (
                    "other_value_class",
                    models.TextField(verbose_name="Övrig värdeklass"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GeneralProtectedHabitatArea",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file_name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "file_reference_identity",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "file_reference_link",
                    models.URLField(blank=True, max_length=1024, null=True),
                ),
                (
                    "file_reference_namespace",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("object_definition_date", models.DateTimeField()),
                ("continues_outside_survey_area", models.BooleanField(default=False)),
                (
                    "preliminary_boundary_explanation",
                    models.TextField(blank=True, null=True),
                ),
                ("invasive_species", models.TextField(blank=True, null=True)),
                ("object_description", models.TextField(blank=True, null=True)),
                (
                    "object_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("object_number", models.CharField(max_length=255, unique=True)),
                ("object_version", models.IntegerField()),
                ("preliminary_boundary", models.BooleanField(default=False)),
                ("references", models.TextField(blank=True, null=True)),
                ("habitat_area_type", models.CharField(max_length=255)),
                ("executor", models.CharField(max_length=255)),
                ("valid_from", models.DateTimeField()),
                ("valid_to", models.DateTimeField(blank=True, null=True)),
                ("species_known_before", models.TextField(blank=True, null=True)),
                ("species_observed", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Habitat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file_name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "file_reference_identity",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "file_reference_link",
                    models.URLField(blank=True, max_length=1024, null=True),
                ),
                (
                    "file_reference_namespace",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("object_definition_date", models.DateTimeField()),
                ("continues_outside_survey_area", models.BooleanField(default=False)),
                (
                    "preliminary_boundary_explanation",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "habitat_suitability",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "alternative_to_habitat_suitability",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "invasive_species",
                    models.CharField(default="ej tillämpbart", max_length=255),
                ),
                ("object_description", models.TextField()),
                (
                    "object_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "object_number",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("object_version", models.IntegerField()),
                ("preliminary_boundary", models.BooleanField(default=False)),
                ("references", models.TextField(blank=True, null=True)),
                ("swedish_name", models.CharField(max_length=255)),
                ("scientific_name", models.CharField(max_length=255)),
                ("executor", models.CharField(max_length=255)),
                ("valid_from", models.DateTimeField()),
                ("valid_to", models.DateTimeField(blank=True, null=True)),
                (
                    "species_known_before",
                    models.CharField(default="ej tillämpbart", max_length=255),
                ),
                (
                    "species_observed",
                    models.CharField(default="ej tillämpbart", max_length=255),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LandscapeArea",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="landscape_images/"
                    ),
                ),
                ("filename", models.CharField(blank=True, max_length=255)),
                ("file_identity", models.CharField(blank=True, max_length=255)),
                ("file_link", models.URLField(blank=True)),
                ("namespace", models.CharField(blank=True, max_length=255)),
                ("object_delimitation_date", models.DateTimeField(auto_now_add=True)),
                ("extends_beyond_survey_area", models.BooleanField(default=False)),
                ("preliminary_delimitation_explanation", models.TextField(blank=True)),
                ("invasive_species", models.TextField(blank=True)),
                ("value_landscape_motivation", models.TextField(blank=True)),
                ("object_description", models.TextField()),
                ("object_name", models.CharField(blank=True, max_length=255)),
                ("object_number", models.CharField(max_length=255, unique=True)),
                ("object_version", models.IntegerField()),
                ("preliminary_delimitation", models.BooleanField(default=False)),
                ("references", models.TextField(blank=True)),
                ("performer", models.CharField(max_length=255)),
                ("valid_from", models.DateTimeField()),
                ("valid_to", models.DateTimeField(blank=True, null=True)),
                ("known_value_species", models.TextField(blank=True)),
                ("observed_value_species", models.TextField(blank=True)),
                ("is_value_landscape", models.BooleanField(default=False)),
                ("geom", django.contrib.gis.db.models.fields.PolygonField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name="Natura2000HabitatType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file_name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "file_reference_identity",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "file_reference_link",
                    models.URLField(blank=True, max_length=1024, null=True),
                ),
                (
                    "file_reference_namespace",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("object_definition_date", models.DateTimeField()),
                ("continues_outside_survey_area", models.BooleanField(default=False)),
                (
                    "preliminary_boundary_explanation",
                    models.TextField(blank=True, null=True),
                ),
                ("invasive_species", models.TextField(blank=True, null=True)),
                ("object_description", models.TextField(blank=True, null=True)),
                (
                    "object_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("object_number", models.CharField(max_length=255, unique=True)),
                ("object_version", models.IntegerField()),
                ("preliminary_boundary", models.BooleanField(default=False)),
                ("references", models.TextField(blank=True, null=True)),
                ("executor", models.CharField(max_length=255)),
                ("valid_from", models.DateTimeField()),
                ("valid_to", models.DateTimeField(blank=True, null=True)),
                ("species_known_before", models.TextField(blank=True, null=True)),
                ("species_observed", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="ValuableTree",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image_filename", models.CharField(blank=True, max_length=255)),
                ("file_identity", models.CharField(blank=True, max_length=255)),
                ("file_link", models.URLField(blank=True)),
                ("namespace", models.CharField(blank=True, max_length=255)),
                ("object_delimitation_date", models.DateTimeField()),
                (
                    "extends_beyond_survey_area",
                    models.BooleanField(blank=True, default=False),
                ),
                ("preliminary_delimitation_explanation", models.TextField(blank=True)),
                ("invasive_species", models.TextField(blank=True)),
                (
                    "crown_diameter",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("object_description", models.TextField(blank=True)),
                ("object_name", models.CharField(blank=True, max_length=255)),
                (
                    "object_number",
                    models.CharField(blank=True, max_length=255, unique=True),
                ),
                ("object_version", models.IntegerField()),
                (
                    "preliminary_delimitation",
                    models.BooleanField(blank=True, default=False),
                ),
                ("references", models.TextField(blank=True)),
                (
                    "trunk_circumference",
                    models.DecimalField(decimal_places=2, max_digits=5),
                ),
                ("swedish_name", models.CharField(blank=True, max_length=255)),
                ("scientific_name", models.CharField(blank=True, max_length=255)),
                ("tree_status", models.CharField(max_length=255)),
                ("tree_vitality", models.CharField(max_length=255)),
                ("performer", models.CharField(max_length=255)),
                ("valid_from", models.DateTimeField()),
                ("valid_to", models.DateTimeField(blank=True, null=True)),
                ("known_value_species", models.TextField(blank=True)),
                ("observed_value_species", models.TextField(blank=True)),
                ("action_needed", models.TextField(blank=True)),
                ("geom", django.contrib.gis.db.models.fields.GeometryField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name="NatureConservationHabitat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("species_values", models.TextField()),
                ("image_filename", models.CharField(max_length=255)),
                ("file_identity", models.CharField(blank=True, max_length=255)),
                ("file_link", models.URLField(blank=True)),
                ("namespace", models.CharField(blank=True, max_length=255)),
                ("habitat_values", models.TextField()),
                ("object_delimitation_date", models.DateTimeField()),
                ("extends_beyond_survey_area", models.BooleanField(default=False)),
                ("preliminary_delimitation_explanation", models.TextField(blank=True)),
                ("preliminary_value_class_explanation", models.TextField(blank=True)),
                (
                    "hydromorphological_type",
                    models.CharField(blank=True, max_length=255),
                ),
                (
                    "hydrological_type_code",
                    models.CharField(blank=True, max_length=255),
                ),
                ("invasive_species", models.TextField()),
                (
                    "supplementary_biotope_type",
                    models.CharField(blank=True, max_length=255),
                ),
                (
                    "supplementary_conservation_code",
                    models.CharField(blank=True, max_length=255),
                ),
                ("nature_type", models.CharField(max_length=255)),
                ("conservation_value_class", models.CharField(max_length=255)),
                ("object_description", models.TextField()),
                ("object_name", models.CharField(blank=True, max_length=255)),
                ("object_number", models.CharField(max_length=255, unique=True)),
                ("object_version", models.IntegerField()),
                ("preliminary_delimitation", models.BooleanField(default=False)),
                ("preliminary_value_class", models.BooleanField(default=False)),
                ("references", models.TextField()),
                ("performer", models.CharField(max_length=255)),
                ("valid_from", models.DateTimeField()),
                ("valid_to", models.DateTimeField(blank=True, null=True)),
                ("known_value_species", models.TextField()),
                ("observed_value_species", models.TextField()),
                ("geom", django.contrib.gis.db.models.fields.PolygonField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name="OtherHabitat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file_name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "file_reference_identity",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "file_reference_link",
                    models.URLField(blank=True, max_length=1024, null=True),
                ),
                (
                    "file_reference_namespace",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("object_definition_date", models.DateTimeField()),
                ("continues_outside_survey_area", models.BooleanField(default=False)),
                (
                    "preliminary_boundary_explanation",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "preliminary_value_class_explanation",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "hydromorphological_type",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "hydromorphological_type_code",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("invasive_species", models.TextField(blank=True, null=True)),
                (
                    "supplementary_habitat_type",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "supplementary_habitat_type_code",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("nature_type", models.CharField(max_length=255)),
                ("object_description", models.TextField(blank=True, null=True)),
                (
                    "object_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("object_number", models.CharField(max_length=255, unique=True)),
                ("object_version", models.IntegerField()),
                ("preliminary_boundary", models.BooleanField(default=False)),
                ("preliminary_value_class", models.BooleanField(default=False)),
                ("references", models.TextField(blank=True, null=True)),
                ("executor", models.CharField(max_length=255)),
                ("valid_from", models.DateTimeField()),
                ("valid_to", models.DateTimeField(blank=True, null=True)),
                ("species_known_before", models.TextField(blank=True, null=True)),
                ("species_observed", models.TextField(blank=True, null=True)),
                ("other_value_class", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="SmallWaterBody",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("species_values", models.TextField(verbose_name="Artvärden")),
                (
                    "image",
                    models.ImageField(
                        blank=True, upload_to="small_water_bodies/", verbose_name="Bild"
                    ),
                ),
                (
                    "file_name",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Filnamn"
                    ),
                ),
                (
                    "file_reference",
                    models.TextField(blank=True, verbose_name="Filreferens"),
                ),
                (
                    "identity",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Identitet"
                    ),
                ),
                ("link", models.URLField(blank=True, verbose_name="Länk")),
                (
                    "namespace",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Namnrymd"
                    ),
                ),
                ("habitat_values", models.TextField(verbose_name="Biotopvärden")),
                (
                    "object_boundary_date",
                    models.DateTimeField(verbose_name="Datum för objektavgränsning"),
                ),
                (
                    "continues_outside_survey_area",
                    models.CharField(
                        blank=True,
                        choices=[("JA", "Ja"), ("NEJ", "Nej")],
                        max_length=3,
                        verbose_name="Fortsätter utanför inventeringsområde",
                    ),
                ),
                (
                    "preliminary_boundary_explanation",
                    models.TextField(
                        blank=True,
                        verbose_name="Förklaring till preliminär avgränsning",
                    ),
                ),
                (
                    "preliminary_value_class_explanation",
                    models.TextField(
                        verbose_name="Förklaring till preliminär värdeklass"
                    ),
                ),
                (
                    "hydromorphological_type",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Hydromorfologisk typ"
                    ),
                ),
                (
                    "hydromorphological_type_code",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        verbose_name="Hydromorfologisk typkod",
                    ),
                ),
                (
                    "invasive_alien_species",
                    models.TextField(
                        blank=True, verbose_name="Invasiva främmande arter"
                    ),
                ),
                (
                    "supplementary_biotope_type",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        verbose_name="Kompletterande biotoptyp",
                    ),
                ),
                (
                    "supplementary_biotope_type_code",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        verbose_name="Kompletterande biotoptypskod",
                    ),
                ),
                (
                    "nature_type",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Naturtyp"
                    ),
                ),
                (
                    "conservation_value_class",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Naturvärdesklass"
                    ),
                ),
                (
                    "object_description",
                    models.TextField(blank=True, verbose_name="Objektbeskrivning"),
                ),
                (
                    "object_name",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Objektnamn"
                    ),
                ),
                (
                    "object_number",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Objektnummer"
                    ),
                ),
                ("object_version", models.IntegerField(verbose_name="Objektversion")),
                (
                    "preliminary_boundary",
                    models.CharField(
                        blank=True,
                        choices=[("JA", "Ja"), ("NEJ", "Nej")],
                        max_length=3,
                        verbose_name="Preliminär avgränsning",
                    ),
                ),
                (
                    "preliminary_value_class",
                    models.CharField(
                        choices=[("JA", "Ja"), ("NEJ", "Nej")],
                        max_length=3,
                        verbose_name="Preliminär värdeklass",
                    ),
                ),
                ("references", models.TextField(blank=True, verbose_name="Referenser")),
                ("performer", models.TextField(verbose_name="Utförare")),
                (
                    "valid_from",
                    models.DateTimeField(verbose_name="Version giltig från"),
                ),
                (
                    "valid_to",
                    models.DateTimeField(blank=True, null=True, verbose_name="Till"),
                ),
                (
                    "known_species",
                    models.TextField(blank=True, verbose_name="Kända sedan tidigare"),
                ),
                (
                    "observed_species",
                    models.TextField(blank=True, verbose_name="Observerade"),
                ),
                (
                    "other_value_class",
                    models.TextField(verbose_name="Övrig värdeklass"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SpeciesOccurrence",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file_name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "file_reference_identity",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "file_reference_link",
                    models.URLField(blank=True, max_length=1024, null=True),
                ),
                (
                    "file_reference_namespace",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("object_definition_date", models.DateTimeField()),
                ("continues_outside_survey_area", models.BooleanField(default=False)),
                (
                    "preliminary_boundary_explanation",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "quantification",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "alternative_to_quantification",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "invasive_species",
                    models.CharField(default="ej tillämpbart", max_length=255),
                ),
                ("object_description", models.TextField(blank=True, null=True)),
                (
                    "object_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "object_number",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("object_version", models.IntegerField()),
                ("preliminary_boundary", models.BooleanField(default=False)),
                ("references", models.TextField(blank=True, null=True)),
                ("swedish_name", models.CharField(max_length=255)),
                ("scientific_name", models.CharField(max_length=255)),
                ("executor", models.CharField(max_length=255)),
                ("valid_from", models.DateTimeField()),
                ("valid_to", models.DateTimeField(blank=True, null=True)),
                (
                    "species_known_before",
                    models.CharField(default="ej tillämpbart", max_length=255),
                ),
                (
                    "species_observed",
                    models.CharField(default="ej tillämpbart", max_length=255),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ValueElement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image_filename", models.CharField(blank=True, max_length=255)),
                ("file_identity", models.CharField(blank=True, max_length=255)),
                ("file_link", models.URLField(blank=True)),
                ("namespace", models.CharField(blank=True, max_length=255)),
                ("object_delimitation_date", models.DateTimeField()),
                (
                    "extends_beyond_survey_area",
                    models.BooleanField(blank=True, default=False),
                ),
                ("preliminary_delimitation_explanation", models.TextField(blank=True)),
                ("invasive_species", models.TextField(blank=True)),
                ("object_description", models.TextField(blank=True)),
                ("object_name", models.CharField(blank=True, max_length=255)),
                (
                    "object_number",
                    models.CharField(blank=True, max_length=255, unique=True),
                ),
                ("object_version", models.IntegerField()),
                (
                    "preliminary_delimitation",
                    models.BooleanField(blank=True, default=False),
                ),
                ("references", models.TextField(blank=True)),
                ("performer", models.CharField(max_length=255)),
                ("valid_from", models.DateTimeField()),
                ("valid_to", models.DateTimeField(blank=True, null=True)),
                ("known_value_species", models.TextField(blank=True)),
                ("observed_value_species", models.TextField(blank=True)),
                ("value_element_type", models.CharField(max_length=255)),
                ("geom", django.contrib.gis.db.models.fields.GeometryField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name="WatercourseSegment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("species_values", models.TextField(verbose_name="Artvärden")),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        upload_to="watercourse_segments/",
                        verbose_name="Bild",
                    ),
                ),
                (
                    "file_name",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Filnamn"
                    ),
                ),
                (
                    "file_reference",
                    models.TextField(blank=True, verbose_name="Filreferens"),
                ),
                (
                    "identity",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Identitet"
                    ),
                ),
                ("link", models.URLField(blank=True, verbose_name="Länk")),
                (
                    "namespace",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Namnrymd"
                    ),
                ),
                ("habitat_values", models.TextField(verbose_name="Biotopvärden")),
                (
                    "object_boundary_date",
                    models.DateTimeField(verbose_name="Datum för objektavgränsning"),
                ),
                (
                    "continues_outside_survey_area",
                    models.CharField(
                        blank=True,
                        choices=[("JA", "Ja"), ("NEJ", "Nej")],
                        max_length=3,
                        verbose_name="Fortsätter utanför inventeringsområde",
                    ),
                ),
                (
                    "preliminary_boundary_explanation",
                    models.TextField(
                        blank=True,
                        verbose_name="Förklaring till preliminär avgränsning",
                    ),
                ),
                (
                    "preliminary_value_class_explanation",
                    models.TextField(
                        blank=True, verbose_name="Förklaring till preliminär värdeklass"
                    ),
                ),
                (
                    "hydromorphological_type",
                    models.CharField(
                        max_length=255, verbose_name="Hydromorfologisk typ"
                    ),
                ),
                (
                    "hydromorphological_type_code",
                    models.CharField(
                        max_length=255, verbose_name="Hydromorfologisk typkod"
                    ),
                ),
                (
                    "invasive_alien_species",
                    models.TextField(
                        blank=True, verbose_name="Invasiva främmande arter"
                    ),
                ),
                (
                    "supplementary_biotope_type",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        verbose_name="Kompletterande biotoptyp",
                    ),
                ),
                (
                    "supplementary_biotope_type_code",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        verbose_name="Kompletterande biotoptypskod",
                    ),
                ),
                (
                    "nature_type",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Naturtyp"
                    ),
                ),
                (
                    "conservation_value_class",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Naturvärdesklass"
                    ),
                ),
                (
                    "object_description",
                    models.TextField(blank=True, verbose_name="Objektbeskrivning"),
                ),
                (
                    "object_name",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Objektnamn"
                    ),
                ),
                (
                    "object_number",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Objektnummer"
                    ),
                ),
                ("object_version", models.IntegerField(verbose_name="Objektversion")),
                (
                    "preliminary_boundary",
                    models.CharField(
                        blank=True,
                        choices=[("JA", "Ja"), ("NEJ", "Nej")],
                        max_length=3,
                        verbose_name="Preliminär avgränsning",
                    ),
                ),
                (
                    "preliminary_value_class",
                    models.CharField(
                        blank=True,
                        choices=[("JA", "Ja"), ("NEJ", "Nej")],
                        max_length=3,
                        verbose_name="Preliminär värdeklass",
                    ),
                ),
                ("references", models.TextField(blank=True, verbose_name="Referenser")),
                ("performer", models.TextField(verbose_name="Utförare")),
                (
                    "valid_from",
                    models.DateTimeField(verbose_name="Version giltig från"),
                ),
                (
                    "valid_to",
                    models.DateTimeField(blank=True, null=True, verbose_name="Till"),
                ),
                (
                    "known_species",
                    models.TextField(blank=True, verbose_name="Kända sedan tidigare"),
                ),
                ("observed_species", models.TextField(verbose_name="Observerade")),
                (
                    "other_value_class",
                    models.TextField(blank=True, verbose_name="Övrig värdeklass"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NaturalValueTree",
            fields=[
                (
                    "valuabletree_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="survey_app_vm.valuabletree",
                    ),
                ),
            ],
            bases=("survey_app_vm.valuabletree",),
        ),
    ]
